---
const props = Astro.props
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/Card.astro';


export async function getStaticPaths() {

    const response = await fetch('http://localhost:8000/movies');
    const movies = await response.json();
    return movies.data.map(({slugCurrent, title, overview, posterAssetUrl}) => {
        return {
            params: {
                slug: slugCurrent ?? 'dummy',
            },
            props: {slugCurrent, title, overview, posterAssetUrl}


        };
    })
}

const {slugCurrent, title, overview, posterAssetUrl} = Astro.props;
---

<Layout title="SLAY Stack movie demo.">
    <main>
        <h1 class="text-gradient">{title}</h1>
        <ul role="list" class="link-card-grid">
            <Card
                    href={slugCurrent}
                    title=''
                    body={overview}
                    posterUrl={posterAssetUrl}
            />
        </ul>
        <a class="back-link" href="/" aria-label="link back to movie list">Back to movie list</a>
    </main>
</Layout>

<style>
    main {
        margin: auto;
        padding: 1rem;
        width: 800px;
        max-width: calc(100% - 2rem);
        color: white;
        font-size: 20px;
        line-height: 1.6;
    }

    .astro-a {
        position: absolute;
        top: -32px;
        left: 50%;
        transform: translatex(-50%);
        width: 220px;
        height: auto;
        z-index: -1;
    }

    h1 {
        font-size: 4rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin-bottom: 1em;
    }

    .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
    }

    .instructions {
        margin-bottom: 2rem;
        border: 1px solid rgba(var(--accent-light), 25%);
        background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
        padding: 1.5rem;
        border-radius: 8px;
    }

    .instructions code {
        font-size: 0.8em;
        font-weight: bold;
        background: rgba(var(--accent-light), 12%);
        color: rgb(var(--accent-light));
        border-radius: 4px;
        padding: 0.3em 0.4em;
    }

    .instructions strong {
        color: rgb(var(--accent-light));
    }

    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 2rem;
        padding: 0;
    }
    a.back-link {
        color: #fff;
        font-size: larger;
    }

</style>